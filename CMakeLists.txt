cmake_minimum_required(VERSION 3.14)
if(SIMUL_PLATFORM_DIR)
	set(PLATFORM_SOURCE_DIR ${SIMUL_PLATFORM_DIR})
	set(PLATFORM_BUILD_DIR ${CMAKE_CURRENT_BINARY_DIR})
	set(SIMUL_PLATFORM_FOLDER_PREFIX Platform)
else()
project(Platform)
	set(SIMUL_PLATFORM_DIR ${CMAKE_CURRENT_SOURCE_DIR})
	set(PLATFORM_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR})
	set(PLATFORM_BUILD_DIR ${CMAKE_CURRENT_BINARY_DIR})
endif()
set(SIMUL_PLATFORM_DIR ${CMAKE_CURRENT_LIST_DIR})  
if(PLATFORM_USE_ASSIMP)
	set( ASSIMP_LIBNAME assimp-vc142-mt$<$<CONFIG:Debug>:d> )
	if(NOT ${CMAKE_SYSTEM_NAME} MATCHES "Windows" )
		add_subdirectory(External/assimp)
	endif()
endif()

include("CMake/Variables.cmake")
include("CMake/Include.cmake")
include("CMake/Shader.cmake")

set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/CMake" ${CMAKE_MODULE_PATH})
#For GDK, specify C++17 before adding subdirectories.
if(GDK)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /std:c++17")
endif()

add_subdirectory(Core)
add_subdirectory(Math)
add_subdirectory(CrossPlatform)
add_subdirectory(Applications/Sfx)


if(PLATFORM_SUPPORT_VULKAN)
	if(SIMUL_BUILD_SAMPLES AND ${CMAKE_SYSTEM_NAME} MATCHES "Linux" )
		add_subdirectory(External/glfw)
	endif()
	if(${CMAKE_SYSTEM_NAME} MATCHES "Windows" OR ${CMAKE_SYSTEM_NAME} MATCHES "Linux")
		add_subdirectory(Vulkan)
	endif()
endif()
 
if(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
	if(SIMUL_SOURCE_BUILD)
		add_subdirectory(Applications/Sample)
		add_subdirectory(Applications/Test)
	endif()
	if( PLATFORM_SUPPORT_OPENGL )
		add_subdirectory(OpenGL)
	endif()
	if( PLATFORM_SUPPORT_D3D11 )
		add_subdirectory(DirectX11)
	endif()
endif()

if(XBOXONE AND PLATFORM_SUPPORT_D3D11)
	add_subdirectory(DirectX11)
endif()

if(${CMAKE_SYSTEM_NAME} MATCHES "Windows" AND PLATFORM_SUPPORT_D3D12)
	add_subdirectory(DirectX12)
endif()

if(XBOXONE AND PLATFORM_SUPPORT_D3D12)
	add_subdirectory(DirectX12)
endif()

if(XBOXONE)
	add_subdirectory(External/DirectX/DirectXTex/DirectXTex)
	set( ENV{SIMUL_XDK_VERSION} ${REQUIRED_XB1_TOOLCHAIN_VERSION})
endif()

if(GDK)
	add_subdirectory(DirectX12)
	add_subdirectory(External/DirectX/DirectXTex/DirectXTex)
	#add_subdirectory(External/DirectX/DirectXTK12)
	set( ENV{SIMUL_XDK_VERSION} ${REQUIRED_XB1_TOOLCHAIN_VERSION})
endif()

if(PLATFORM_WINGDK)
	add_subdirectory(DirectX11)
endif()

if(${CMAKE_SYSTEM_NAME} MATCHES "Windows" )
	add_subdirectory(External/DirectX/DirectXTex/DirectXTex)
endif()

if(PLATFORM_BUILD_DOCS)
	add_subdirectory(Docs)
endif()

if(SIMUL_SUPPORT_PS4)
	add_subdirectory(PS4/Render)
endif()

if(PLATFORM_COMMODORE)
	add_subdirectory(Commodore)
endif()