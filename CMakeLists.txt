cmake_minimum_required(VERSION 3.14)
if(SIMUL_PLATFORM_DIR)
set(SIMUL_PLATFORM_FOLDER_PREFIX Platform)
else()
project(Platform)
set(SIMUL_PLATFORM_DIR ${CMAKE_CURRENT_SOURCE_DIR})
endif()

include("CMake/Variables.cmake")
include("CMake/Include.cmake")
include("CMake/Shader.cmake")

add_subdirectory(Core)
add_subdirectory(Math)
add_subdirectory(CrossPlatform)
add_subdirectory(Applications/Sfx)

if(SIMUL_SUPPORT_VULKAN)
	if(SIMUL_BUILD_SAMPLES AND ${CMAKE_SYSTEM_NAME} MATCHES "Linux" )
		add_subdirectory(External/glfw)
	endif()
	if(${CMAKE_SYSTEM_NAME} MATCHES "Windows" OR ${CMAKE_SYSTEM_NAME} MATCHES "Linux")
		add_subdirectory(Vulkan)
	endif()
endif()
 
if(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
	if(SIMUL_SOURCE_BUILD)
		add_subdirectory(Applications/Sample)
	endif()
	if( SIMUL_SUPPORT_OPENGL )
		add_subdirectory(OpenGL)
	endif()
	if( SIMUL_SUPPORT_D3D11 )
		add_subdirectory(DirectX11)
	endif()
endif()

if(XBOXONE AND SIMUL_SUPPORT_D3D11)
	add_subdirectory(DirectX12)
endif()

if(${CMAKE_SYSTEM_NAME} MATCHES "Windows" AND SIMUL_SUPPORT_D3D12)
	add_subdirectory(DirectX12)
endif()

if(XBOXONE)
	add_subdirectory(External/DirectX/DirectXTex/DirectXTex)
	set( ENV{SIMUL_XDK_VERSION} ${REQUIRED_XB1_TOOLCHAIN_VERSION})
endif()

if(GDK)
	add_subdirectory(DirectX12)
	add_subdirectory(External/DirectX/DirectXTex/DirectXTex)
	#add_subdirectory(External/DirectX/DirectXTK12)
	set( ENV{SIMUL_XDK_VERSION} ${REQUIRED_XB1_TOOLCHAIN_VERSION})
endif()

if(${CMAKE_SYSTEM_NAME} MATCHES "Windows" )
	add_subdirectory(External/DirectX/DirectXTex/DirectXTex)
	add_subdirectory(External/DirectX/Effects11_Win8SDK)
endif()

if(SIMUL_SUPPORT_PS4)
	add_subdirectory(PS4/Render)
endif()

if(PLATFORM_COMMODORE)
	add_subdirectory(Commodore)
endif()