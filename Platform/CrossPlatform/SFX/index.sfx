//  Copyright (c) 2015 Simul Software Ltd. All rights reserved.

// Recommended by D Cook of MS to fix Xbox compiler crash:
#define __XBOX_DISABLE_ITERATION

#include "shader_platform.sl"

#include "../SL/common.sl"
#include "../SL/render_states.sl"
#include "../SL/simul_cloud_constants.sl"
#include "../SL/colour_packing.sl"

uniform Texture3D cloudDensity				SIMUL_TEXTURE_REGISTER(0);
#ifdef SFX_TYPED_UAV_LOADS
uniform RWTexture2D<vec4> cloudIndex;
#else
uniform RWTexture2D<uint> cloudIndex		SIMUL_RWTEXTURE_REGISTER(0);
#endif

groupshared vec4 contribution[16];

CS_LAYOUT(4,4,1)
shader void CS_UpdateIndex(uint3 g : SV_GroupID, uint3 t : SV_GroupThreadID )
{
	/*vec4 min_max=vec4(1000.0,-1000.0,0,0);
	uint3 pos=g*4+t;
	for(int i=0;i<128;i++)
	{
		if(i==windowGrid.z)
			break;
		pos.z=i;
		float dens=cloudDensity[pos].z;
		if(dens>0)
		{
			float h1=float(i)/float(windowGrid.z);
			float h2=float(i+1)/float(windowGrid.z);
			min_max.x=min(min_max.x,h1);
			min_max.y=max(min_max.y,1);
		}
	}
	contribution[t.x+t.y*4]=min_max;
	GroupMemoryBarrierWithGroupSync();
	if(t.x*t.y==0)
	{
		min_max=vec4(1000.0,-1000.0,0,0);
		for(int i=0;i<16;i++)
		{
			vec4 h=contribution[i];
			min_max.x=min(min_max.x,h.x);
			min_max.y=max(min_max.y,h.y);
		}
		cloudIndex[g.xy]=PackVec4ToUint(saturate(min_max));
	}*/
	cloudIndex[g.xy]=PackVec4ToUint(saturate(vec4(g.xy/256.0,0,0)));
}

technique update_index
{
    pass p0
    {
		SetComputeShader(CompileShader(cs_5_0,CS_UpdateIndex()));
    }
}