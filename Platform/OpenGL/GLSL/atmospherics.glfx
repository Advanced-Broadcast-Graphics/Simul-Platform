#include "CppGlSl.hs"
#include "saturate.glsl"
#include "../../CrossPlatform/SL/atmospherics_constants.sl"
#include "../../CrossPlatform/SL/simul_inscatter_fns.sl"
#include "../../CrossPlatform/SL/depth.sl"

uniform sampler2D depthTexture;
uniform sampler2D lossTexture;
uniform sampler2D inscTexture;
uniform sampler2D skylightTexture;
uniform sampler2D cloudShadowTexture;

#include "view_dir.glsl"

shader VS_FullScreen(in int gl_VertexID, out vec2 texCoords, out vec2 pos)
{
	vec2 poss[4];
	poss[0]		=vec2(1.0, 0.0);
	poss[1]		=vec2(1.0, 1.0);
	poss[2]		=vec2(0.0, 0.0);
	poss[3]		=vec2(0.0, 1.0);
	pos			=poss[gl_VertexID];
	gl_Position	=vec4(vec2(-1.0,-1.0)+2.0*pos.xy,1.0,1.0);
    texCoords	=pos.xy;
}

float GetIlluminationAt(vec3 vd)
{
	vec3 pos=vd+viewPosition;
	vec3 cloud_texc=(pos-cloudOrigin)*cloudScale;
	vec4 cloud_texel=texture(cloudShadowTexture,cloud_texc.xy);
	float illumination=cloud_texel.z;
	float above=saturate(cloud_texc.z);
	illumination=saturate(illumination-above);
	return illumination;
}

shader PS_Loss(in vec2 texCoords,in vec2 pos,out vec4 FragColor)
{
	vec3 view=texCoordToViewDirection(texCoords);
	float sine=view.z;
    vec4 lookup=texture(depthTexture,texCoords);
	float depth=lookup.x;
	float dist=depthToFadeDistance(depth,pos.xy,depthToLinFadeDistParams,tanHalfFov);
	vec2 fade_texc=vec2(pow(dist,0.5),0.5*(1.0-sine));
	vec3 loss=texture(lossTexture,fade_texc).rgb;
    gl_FragColor=vec4(loss,1.0);
}

shader PS_Inscatter(in vec2 texCoords,in vec2 pos, out vec4 FragColor)
{
	vec3 view=texCoordToViewDirection(texCoords);
	float sine=view.z;
    vec4 lookup=texture(depthTexture,texCoords);
	float depth=lookup.x;
	float dist=depthToFadeDistance(depth,pos.xy,depthToLinFadeDistParams,tanHalfFov);
	vec2 fade_texc=vec2(pow(dist,0.5),0.5*(1.0-sine));
	vec4 insc=texture(inscTexture,fade_texc);
	float cos0=dot(view,lightDir);
	vec3 colour=InscatterFunction(insc,hazeEccentricity,cos0,mieRayleighRatio).rgb;
	vec3 skyl=texture(skylightTexture,fade_texc).rgb;
	colour+=skyl;
	colour*=exposure;
    FragColor=vec4(colour.rgb,1.0);
}

program loss.near
{
    vs(430) = VS_FullScreen();
    fs(430) = PS_Loss();
};

program loss.near
{
    vs(430) = VS_FullScreen();
    fs(430) = PS_Loss();
};

program inscatter
{
    vs(430) = VS_FullScreen();
    fs(430) = PS_Inscatter();
};

